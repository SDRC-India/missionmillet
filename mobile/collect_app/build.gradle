apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

import com.android.ddmlib.DdmPreferences
DdmPreferences.setTimeOut(60000)

ant.condition(property: 'os', value: 'windows') { 
    os(family: 'windows') 
}
ant.condition(property: 'os', value: 'unix') { 
    os(family: 'unix') 
}

// Build numbers were manually set until 1067
def LEGACY_BUILD_NUMBER_OFFSET = 1067

// Based on http://stackoverflow.com/questions/17097263#24121734
def getMasterCommitCount = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            switch (ant.properties.os) {
                case 'windows':
                    commandLine 'cmd', '/c', 'git', 'rev-list', '--first-parent', '--count', 'master'
                    break
                case 'unix':
                    commandLine 'git', 'rev-list', '--first-parent', '--count', 'master'
                    break
            }
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    } catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            switch (ant.properties.os) {
                case 'windows':
                    commandLine 'cmd', '/c', 'git', 'describe', '--tags', '--dirty', '--always'
                    break
                case 'unix':
                    commandLine 'git', 'describe', '--tags', '--dirty', '--always'
                    break
            }
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return null;
    }
}

def secretsFile = file('secrets.properties')
def secrets = new Properties()
if (secretsFile.exists()) {
    secrets.load(new FileInputStream(secretsFile))
}

android {
    compileSdkVersion(25)
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId('org.sdrcwassan.missionmillet.collect.android')
        minSdkVersion(21)
        targetSdkVersion(28)
        //versionCode LEGACY_BUILD_NUMBER_OFFSET + getMasterCommitCount()
        versionCode 4
        //versionName getVersionName()
        versionName "1.3.1"
        testInstrumentationRunner('android.support.test.runner.AndroidJUnitRunner')
        multiDexEnabled true
    }

    signingConfigs {
        release {
            if (secrets.getProperty('RELEASE_STORE_FILE')) {
                storeFile file(secrets.getProperty('RELEASE_STORE_FILE'))
                storePassword secrets.getProperty('RELEASE_STORE_PASSWORD')
                keyAlias secrets.getProperty('RELEASE_KEY_ALIAS')
                keyPassword secrets.getProperty('RELEASE_KEY_PASSWORD')
            }
       }
    }

    buildTypes {
        release {
            if (secrets.getProperty('RELEASE_STORE_FILE')) {
                signingConfig signingConfigs.release
            }
            minifyEnabled(true)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable(true)
            // Allows AndroidTest JaCoCo reports to be generated
            testCoverageEnabled(false)
        }
    }

    // https://stackoverflow.com/a/27119543/152938
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = new File(outputFileName.replace(".apk", "-${defaultConfig.versionName}.apk"))
        }
    }
    testVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = new File(outputFileName.replace(".apk", "-${defaultConfig.versionName}.apk"))
        }
    }

    packagingOptions {
        // Pick first occurrence of any files that cause conflicts, as defined
        // in common.gradle
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
        pickFirst 'META-INF/services/com.fasterxml.jackson.core.ObjectCodec'
        pickFirst 'META-INF/services/javax.ws.rs.ext.MessageBodyReader'
        pickFirst 'META-INF/services/javax.ws.rs.ext.MessageBodyWriter'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize '2048M'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

// Required to use fileExtensions property in checkstyle file
checkstyle.toolVersion = '7.6.1' 

// The normal check task reports nothing probably because Android uses its own sourceSets
task checkstyle(type: Checkstyle) {
    source 'src'
    // empty classpath because we don't want to check compiled classes
    classpath = files()
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor(0, 'seconds')
        cacheChangingModulesFor(0, 'seconds')
    }
    transitive = true
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all'
    }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation 'com.android.support:appcompat-v7:25.3.1'
    implementation 'com.android.support:design:25.3.1'
    implementation 'com.android.support:cardview-v7:25.3.1'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.google.android.gms:play-services-analytics:10.0.1'
    implementation 'com.google.android.gms:play-services-auth:10.0.1'
    implementation 'com.google.android.gms:play-services-maps:10.0.1'
    implementation('com.google.code.gson:gson:2.6.2') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'com.google.firebase:firebase-core:10.0.1'
    implementation 'com.google.firebase:firebase-crash:10.0.1'
    implementation('com.google.http-client:google-http-client:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.oauth-client:google-oauth-client:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'commons-io:commons-io:2.4'
    implementation 'joda-time:joda-time:2.9.7'
    implementation 'net.sf.kxml:kxml2:2.3.0'
    implementation 'net.sf.opencsv:opencsv:2.3'
    implementation 'org.opendatakit:opendatakit-javarosa:2.3.0'
    implementation 'org.osmdroid:osmdroid-android:5.6.4'
    implementation 'org.slf4j:slf4j-android:1.6.1-RC1'
    implementation 'pub.devrel:easypermissions:0.2.1'
    implementation('com.google.api-client:google-api-client-android:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev64-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-sheets:v4-rev463-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'com.android.support:customtabs:25.3.1'
    implementation 'com.android.support:design:25.3.1'
    implementation 'com.google.zxing:core:3.2.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'
    implementation 'com.android.support:support-v13:25.3.1'
    implementation 'com.karumi:dexter:4.2.0'
    // Testing-only dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.robolectric:robolectric:3.1.2'
    testImplementation 'org.robolectric:shadows-multidex:3.0'
    androidTestImplementation 'com.android.support:support-annotations:25.3.1'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.2.0'
}

// Must be at bottom to prevent dependency collisions
// https://developers.google.com/android/guides/google-services-plugin
apply plugin: 'com.google.gms.google-services'
